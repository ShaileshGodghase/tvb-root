name: lib-tests
on: [push]
jobs:
  lib-tests:
    
    runs-on: self-hosted

    steps:

      - name: nvidia-smi test
        run: nvidia-smi

      - name: pycuda test
        run: python3 -c "import pycuda.autoinit; print('yes')"
      
      - uses: actions/checkout@v1
      
      - name: upgrade pip
        run: python3 -m pip install --upgrade pip

      - name: put ~/.local/bin on $PATH
        run: echo "PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV

      - name: create a requirements file
        run: echo "numba scipy numpy networkx scikit-learn cython numexpr psutil pytest pytest-cov pytest-xdist pytest-benchmark pytest-mock matplotlib psycopg2 h5py>=2.10 typing BeautifulSoup4 subprocess32 flask-restx python-keycloak mako pyAesCrypt pyunicore formencode cfflib jinja2 nibabel sqlalchemy alembic allensdk sphinx==1.2.3 docutils==0.12 werkzeug flask gevent jupyter cherrypy autopep8" | tr ' ' \\n > requirements.txt

      - name: cache ~/.local for pip deps
        id: cache-local
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}

      - name: pip install dependencies (from Dockerfile-build)
        if: steps.cache-local.outputs.cache-hit != 'true'
        run: |
          pip3 install --user -r requirements.txt
          pip3 install --user --no-build-isolation tvb-gdist

      - name: setup tvb
        run: cd tvb_build && bash install_full_tvb.sh

      - name: cache data
        id: cache-data
        uses: actions/cache@v2
        with:
          path: tvb_data
          key: tvb-data

      - name: download data
        if: steps.cache-data.outputs.cache-hit != 'true'
        run: |
          wget -q https://zenodo.org/record/4263723/files/tvb_data.zip?download=1 -O tvb_data.zip
          mkdir tvb_data
          unzip tvb_data.zip -d tvb_data
          rm tvb_data.zip

      - name: setup data
        run: |
          cd tvb_data
          python3 setup.py develop

      - name: run library tests
        run: cd scientific_library && python3 -m pytest -n12 --ignore=tvb/tests/library/simulator/rateml_test.py

      - name: run library benchmarks
        run: cd scientific_library && python3 -m pytest --benchmark-only --ignore=tvb/tests/library/simulator/rateml_test.py
      
      - name: run rateml tests
        run: cd scientific_library/tvb/tests/library/simulator/ && pytest rateml_test.py
